
pipeline {
    agent any
    options {
        skipStagesAfterUnstable()
    }
    stages {
         stage('Clone repository') { 
            steps { 
                script{
                checkout scm
                }
            }
        }
        stage('Build') { 
            steps { 
                script{
                    sh 'docker build -t service1.app . '
                }
            }
        }
        stage('Test'){
            steps {
                 echo 'Empty'
            }
        }
        stage('Push') {
            steps {
                script{
                        sh 'aws configure'
                        sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 531185373103.dkr.ecr.us-east-1.amazonaws.com'
                        sh 'docker tag service1.app:latest 531185373103.dkr.ecr.us-east-1.amazonaws.com/my-first-ecr-repo:service1.app'
                        sh 'docker push 531185373103.dkr.ecr.us-east-1.amazonaws.com/my-first-ecr-repo:service1.app'
                    }
                }
        }
        stage('Deploy'){
            steps {
                sh 'kubectl apply -f deployment.yml'
            }
        }
        stage('SonarQube analysis') {
            steps {
                script{
                    def scannerHome = tool 'sonarscan';
                    withSonarQubeEnv('sonarqube') {
                    sh "${tool("sonarscan")}/bin/sonar-scanner \
                        -Dsonar.projectKey=app \
                        -Dsonar.projectName=app"
                    }
                }
            }
        }
    }
}
